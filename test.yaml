#file: noinspection YAMLSchemaValidation
openapi: 3.0.3
info:
  title: GarageFlow
  description: CRM system
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/api/v1'
    description: Local server
paths:
  /users:
    post:
      summary: User creating Method
      tags:
        - Users
      operationId: create_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'


#  /cars:
#    post:
#      summary: Car creating method
#      tags:
#        - Cars
#      operationId: create_car
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Car'
#      responses:
#        '200':
#          description: Car created successfully
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Car'
#
#  /orders:
#    post:
#      summary: Order creating method
#      tags:
#        - Orders
#      operationId: create_order
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Orders'
#      responses:
#        '200':
#          description: Car created successfully
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Orders'


components:
  schemas:
    User:
      description: Description object User
      type: object
      required:
        - first_name
        - second_name
        - phone_number
        - role
      properties:
        first_name:
          type: string
          example: Олег
        second_name:
          type: string
          example: Скалисусов
        phone_number:
          type: string
          example: 89125000000
        email:
          type: string
          example: example@gmail.com
        tg_login:
          type: string
          example: example
        role:
          type: string
          enum:
            - admin
            - worker
            - user
          description: Role in system
#
#    Car:
#      description: Description object Car
#      type: object
#      required:
#        - number
#        - model
#        - vin
#        - owner_id
#      properties:
#        number:
#          type: string
#          example: E251MB11 # latin letters
#        model:
#          type: string
#          example: Toyota Corolla
#        vin:
#          type: string
#          example: JTNKM28E900090600
#        owner_id:
#          type: string
#          example: 2
#
#    Order:
#      description: Description object Order
#      type: object
#      required:
#        - owner_id
#        - car_id
#        - services
#        - checkpoints
#        - worker_id
#      properties:
#        owner_id:
#          type: integer
#          example: 1
#        car_id:
#          type: integer
#          example: 1
#        services:
#          type: string
#          example: '????'
#        checkpoints:
#          type: string
#          example: '????'
#        worker_id:
#          type: integer
#          example: 1
#
#    Orders:
#      type: array
#      items:
#        $ref: '#/components/schemas/Order'
#
